class Item:
    def __init__(self, valor):
        self.item = valor
        self.anterior = None
        self.proximo = None

class ListaEncadeadaDupla:
    def __init__(self):
        self.inicio = None
        self.final = None

    def is_empty(self):
        return self.inicio is None

    def inserir_inicio(self, valor):
        novo_item = Item(valor)
        if self.is_empty():
            self.inicio = novo_item
            self.final = novo_item
        else:
            novo_item.proximo = self.inicio
            self.inicio.anterior = novo_item
            self.inicio = novo_item

    def inserir_final(self, valor):
        novo_item = Item(valor)
        if self.is_empty():
            self.inicio = novo_item
            self.final = novo_item
        else:
            novo_item.anterior = self.final
            self.final.proximo = novo_item
            self.final = novo_item

    def remover_inicio(self):
        if self.is_empty():
            raise IndexError("A lista está vazia")
        valor = self.inicio.item
        self.inicio = self.inicio.proximo
        if self.inicio is None:
            self.final = None
        else:
            self.inicio.anterior = None
        return valor

    def remover_final(self):
        if self.is_empty():
            raise IndexError("A lista está vazia")
        valor = self.final.item
        self.final = self.final.anterior
        if self.final is None:
            self.inicio = None
        else:
            self.final.proximo = None
        return valor

    def exibir_lista(self):
        if self.is_empty():
            print("A lista está vazia")
        else:
            atual = self.inicio
            while atual is not None:
                print(atual.item)
                atual = atual.proximo
